import gspread
from google.oauth2.service_account import Credentials
import streamlit as st
import joblib
from streamlit_autorefresh import st_autorefresh

# ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏ó‡∏∏‡∏Å 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
st_autorefresh(interval=10_000, key="refresh")

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•
model = joblib.load('Model.pkl')

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î scope ‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• service account ‡∏à‡∏≤‡∏Å secrets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
credentials_info = st.secrets["gcp_service_account"]
creds = Credentials.from_service_account_info(credentials_info, scopes=scope)

client = gspread.authorize(creds)
sheet = client.open("FruitSafe").sheet1

st.title("üçé Fruit Pesticide Safety Checker")

try:
    row_data = sheet.row_values(1)
except Exception as e:
    st.error(f"Cannot access Google Sheet: {e}")
    st.stop()

if len(row_data) >= 10:
    try:
        # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡πÄ‡∏õ‡πá‡∏ô float 10 ‡∏Ñ‡πà‡∏≤
        input_data = [float(x) for x in row_data[:10]]

        # ‡πÉ‡∏ä‡πâ model.predict_proba() ‡πÅ‡∏•‡∏∞‡πÄ‡∏≠‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á class 0 (safe)
        prob_safe = model.predict_proba([input_data])[0][0]
        predicted_percent = int(prob_safe * 100)

        # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ö‡∏ö‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô HTML ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
        def display_result(value):
            if value < 60:
                color = "red"
                text = "‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á! ‡∏Ñ‡∏ß‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏ú‡∏•‡πÑ‡∏°‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≠‡∏ö ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
                emoji = "‚ùå"
            elif value < 80:
                color = "#e67e22"
                text = "‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á ‡∏Ñ‡∏ß‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏ú‡∏•‡πÑ‡∏°‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏° ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
                emoji = "‚ö†Ô∏è"
            else:
                color = "green"
                text = "‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≥ ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢"
                emoji = "‚úÖ"
            return color, text, emoji

        color, advice_text, emoji = display_result(predicted_percent)

        st.markdown(f"<h1 style='color:{color};'>{emoji} ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢: {predicted_percent}%</h1>", unsafe_allow_html=True)
        st.write(advice_text)

        # ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 1 ‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à
        sheet.delete_rows(1)

        st.info("‡∏£‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Google Sheet...")

    except Exception as e:
        st.error(f"Prediction error: {e}")
else:
    st.info("‡∏£‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 1 ‡∏Ç‡∏≠‡∏á Google Sheet...")
