import gspread
from google.oauth2.service_account import Credentials
import streamlit as st
import joblib
from streamlit_autorefresh import st_autorefresh

# Load model (‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
model = joblib.load('Model.pkl')
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]

# ‚úÖ ‡∏î‡∏∂‡∏á secrets ‡∏à‡∏≤‡∏Å Streamlit
credentials_info = st.secrets["gcp_service_account"]

# ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Credentials object
creds = Credentials.from_service_account_info(credentials_info, scopes=scope)

# ‚úÖ ‡πÉ‡∏ä‡πâ gspread
client = gspread.authorize(creds)
sheet = client.open("FruitSafe").sheet1


st.title("üçé Fruit Pesticide Safety Checker")

# Auto-refresh every 10 seconds
st_autorefresh(interval=10_000, key="refresh")

try:
    row_data = sheet.row_values(1)
except Exception as e:
    st.error(f"Cannot access Google Sheet: {e}")
    st.stop()

if len(row_data) >= 10:
    try:
        input_data = [float(x) for x in row_data[:10]]
        # input_data = [10 features...]
        prob_safe = model.predict_proba([input_data])[0][0]  # ‚Üê confidence ‡∏Ç‡∏≠‡∏á class 0
        predicted_percent = int(prob_safe * 100)
        
        st.write(f"üß™ Prediction confidence (safe): **{prob_safe:.2f}** ({predicted_percent}%)")
        
        # ‡πÅ‡∏ö‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô 3 ‡∏£‡∏∞‡∏î‡∏±‡∏ö
        if prob_safe >= 0.80:
            st.success("‚úÖ ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡πÑ‡∏î‡πâ")
        elif prob_safe >= 0.40:
            st.warning("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡πÉ‡∏à ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏•‡πâ‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏™‡∏∞‡∏≠‡∏≤‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡πÉ‡∏´‡∏°‡πà")
        else:
            st.error("‚ùå ‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢ ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô")


        try:
            sheet.delete_rows(1)
        except Exception as e:
            st.warning(f"Warning: Could not delete row: {e}")

        st.info("Waiting for new data...")

    except Exception as e:
        st.error(f"Prediction error: {e}")
else:
    st.info("Waiting for new data in Google Sheet row 1...")
